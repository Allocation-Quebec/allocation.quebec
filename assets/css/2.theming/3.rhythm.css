@layer theming {
	/* Content rhythm ----------------------- */
	/* stylelint-disable-next-line -- exception for is-invisible */
	:not(:where(html, body, nav, div, label, ul, ol, li, p, a, span))>:not(:where(link, script, .is-invisible))~* {
		margin-top: var(--SpacingRow);
	}

	:is(h1, h2, h3, h4, h5, h6)+:is(h1, h2, h3, h4, h5, h6) {
		margin-top: var(--SpacingThinner);
	}

	:is(h4, h5, h6)+:is(p, ul, ol) {
		margin-top: var(--SpacingThinnest);
	}

	*+:is(h1,h2,h3,h4,h5,h6,ul,ol,p) {
		margin-top: var(--SpacingThin);
	}

	*+:is(h4) {
		margin-top: var(--SpacingBroader);
	}

	p+p {
		margin-top: var(--SpacingRow);
	}

	*+li {
		margin-top: var(--SpacingThinnest);
	}

	i+* {
		margin-left: var(--SpacingThinnest);
	}


	:is(h3, h4)+* {
		margin-top: var(--SpacingBroad);
	}

	:is(h3, h4)+p {
		margin-top: var(--SpacingThinner);
	}

	/* *+:is(a, button) */

	/* *+is(input, select, textarea) */

	/* Basic container rhythm */
	main>*+* {
		margin-top: var(--SpacingBroadest);
	}

	main>header+* {
		margin-top: var(--SpacingBroadest);
	}

	main>*+* {
		margin-top: var(--SpacingLarge);
	}

	where(:is([hidden]):first-child)+* {
		margin-top: initial;
	}

	:is(h1, .h1)+strong {
		margin-top: var(--SpacingThinnest);

		&+* {
			margin-top: var(--SpacingRow);
		}
	}



	small+:is(h1, h2, h3) {
		margin-top: var(--SpacingThinnest);
	}

	h1 + p {
		margin-top: var(--SpacingBroader);
	}

	p + h3 {
		margin-top: var(--SpacingBroad);
	}


	section>section {
		&>*+* {
			margin-top: var(--SpacingBroad);
		}
		&>*+h4 {
			margin-top: var(--SpacingBroadest);
		}
	}
}
